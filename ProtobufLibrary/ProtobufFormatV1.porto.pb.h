// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufFormatV1.porto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProtobufFormatV1_2eporto
#define GOOGLE_PROTOBUF_INCLUDED_ProtobufFormatV1_2eporto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtobufFormatV1_2eporto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtobufFormatV1_2eporto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProtobufFormatV1_2eporto;
namespace ProtoGuiCore {
class ClientMessage;
struct ClientMessageDefaultTypeInternal;
extern ClientMessageDefaultTypeInternal _ClientMessage_default_instance_;
class DataInfo;
struct DataInfoDefaultTypeInternal;
extern DataInfoDefaultTypeInternal _DataInfo_default_instance_;
class Item;
struct ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class RequestData;
struct RequestDataDefaultTypeInternal;
extern RequestDataDefaultTypeInternal _RequestData_default_instance_;
class ServerMessage;
struct ServerMessageDefaultTypeInternal;
extern ServerMessageDefaultTypeInternal _ServerMessage_default_instance_;
class UnknownMessage;
struct UnknownMessageDefaultTypeInternal;
extern UnknownMessageDefaultTypeInternal _UnknownMessage_default_instance_;
}  // namespace ProtoGuiCore
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoGuiCore::ClientMessage* Arena::CreateMaybeMessage<::ProtoGuiCore::ClientMessage>(Arena*);
template<> ::ProtoGuiCore::DataInfo* Arena::CreateMaybeMessage<::ProtoGuiCore::DataInfo>(Arena*);
template<> ::ProtoGuiCore::Item* Arena::CreateMaybeMessage<::ProtoGuiCore::Item>(Arena*);
template<> ::ProtoGuiCore::RequestData* Arena::CreateMaybeMessage<::ProtoGuiCore::RequestData>(Arena*);
template<> ::ProtoGuiCore::ServerMessage* Arena::CreateMaybeMessage<::ProtoGuiCore::ServerMessage>(Arena*);
template<> ::ProtoGuiCore::UnknownMessage* Arena::CreateMaybeMessage<::ProtoGuiCore::UnknownMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoGuiCore {

// ===================================================================

class UnknownMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoGuiCore.UnknownMessage) */ {
 public:
  inline UnknownMessage() : UnknownMessage(nullptr) {}
  ~UnknownMessage() override;
  explicit PROTOBUF_CONSTEXPR UnknownMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UnknownMessage(const UnknownMessage& from);
  UnknownMessage(UnknownMessage&& from) noexcept
    : UnknownMessage() {
    *this = ::std::move(from);
  }

  inline UnknownMessage& operator=(const UnknownMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnknownMessage& operator=(UnknownMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnknownMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const UnknownMessage* internal_default_instance() {
    return reinterpret_cast<const UnknownMessage*>(
               &_UnknownMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UnknownMessage& a, UnknownMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(UnknownMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnknownMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnknownMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UnknownMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UnknownMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UnknownMessage& from) {
    UnknownMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UnknownMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoGuiCore.UnknownMessage";
  }
  protected:
  explicit UnknownMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnswerFieldNumber = 1,
  };
  // required string Answer = 1;
  bool has_answer() const;
  private:
  bool _internal_has_answer() const;
  public:
  void clear_answer();
  const std::string& answer() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_answer(ArgT0&& arg0, ArgT... args);
  std::string* mutable_answer();
  PROTOBUF_NODISCARD std::string* release_answer();
  void set_allocated_answer(std::string* answer);
  private:
  const std::string& _internal_answer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_answer(const std::string& value);
  std::string* _internal_mutable_answer();
  public:

  // @@protoc_insertion_point(class_scope:ProtoGuiCore.UnknownMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr answer_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtobufFormatV1_2eporto;
};
// -------------------------------------------------------------------

class Item final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoGuiCore.Item) */ {
 public:
  inline Item() : Item(nullptr) {}
  ~Item() override;
  explicit PROTOBUF_CONSTEXPR Item(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Item(const Item& from);
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }
  inline void Swap(Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Item* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Item& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Item& from) {
    Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoGuiCore.Item";
  }
  protected:
  explicit Item(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // required string Name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoGuiCore.Item)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint32_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtobufFormatV1_2eporto;
};
// -------------------------------------------------------------------

class RequestData final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ProtoGuiCore.RequestData) */ {
 public:
  inline RequestData() : RequestData(nullptr) {}
  explicit PROTOBUF_CONSTEXPR RequestData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestData(const RequestData& from);
  RequestData(RequestData&& from) noexcept
    : RequestData() {
    *this = ::std::move(from);
  }

  inline RequestData& operator=(const RequestData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestData& operator=(RequestData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestData& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestData* internal_default_instance() {
    return reinterpret_cast<const RequestData*>(
               &_RequestData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RequestData& a, RequestData& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RequestData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RequestData& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RequestData& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoGuiCore.RequestData";
  }
  protected:
  explicit RequestData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoGuiCore.RequestData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ProtobufFormatV1_2eporto;
};
// -------------------------------------------------------------------

class ClientMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoGuiCore.ClientMessage) */ {
 public:
  inline ClientMessage() : ClientMessage(nullptr) {}
  ~ClientMessage() override;
  explicit PROTOBUF_CONSTEXPR ClientMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ClientMessage(const ClientMessage& from);
  ClientMessage(ClientMessage&& from) noexcept
    : ClientMessage() {
    *this = ::std::move(from);
  }

  inline ClientMessage& operator=(const ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientMessage& operator=(ClientMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientMessage& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kRequestData = 2,
    kUnknownMessage = 3,
    MSG_NOT_SET = 0,
  };

  static inline const ClientMessage* internal_default_instance() {
    return reinterpret_cast<const ClientMessage*>(
               &_ClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ClientMessage& a, ClientMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ClientMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ClientMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ClientMessage& from) {
    ClientMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoGuiCore.ClientMessage";
  }
  protected:
  explicit ClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestDataFieldNumber = 2,
    kUnknownMessageFieldNumber = 3,
  };
  // .ProtoGuiCore.RequestData requestData = 2;
  bool has_requestdata() const;
  private:
  bool _internal_has_requestdata() const;
  public:
  void clear_requestdata();
  const ::ProtoGuiCore::RequestData& requestdata() const;
  PROTOBUF_NODISCARD ::ProtoGuiCore::RequestData* release_requestdata();
  ::ProtoGuiCore::RequestData* mutable_requestdata();
  void set_allocated_requestdata(::ProtoGuiCore::RequestData* requestdata);
  private:
  const ::ProtoGuiCore::RequestData& _internal_requestdata() const;
  ::ProtoGuiCore::RequestData* _internal_mutable_requestdata();
  public:
  void unsafe_arena_set_allocated_requestdata(
      ::ProtoGuiCore::RequestData* requestdata);
  ::ProtoGuiCore::RequestData* unsafe_arena_release_requestdata();

  // .ProtoGuiCore.UnknownMessage unknownMessage = 3;
  bool has_unknownmessage() const;
  private:
  bool _internal_has_unknownmessage() const;
  public:
  void clear_unknownmessage();
  const ::ProtoGuiCore::UnknownMessage& unknownmessage() const;
  PROTOBUF_NODISCARD ::ProtoGuiCore::UnknownMessage* release_unknownmessage();
  ::ProtoGuiCore::UnknownMessage* mutable_unknownmessage();
  void set_allocated_unknownmessage(::ProtoGuiCore::UnknownMessage* unknownmessage);
  private:
  const ::ProtoGuiCore::UnknownMessage& _internal_unknownmessage() const;
  ::ProtoGuiCore::UnknownMessage* _internal_mutable_unknownmessage();
  public:
  void unsafe_arena_set_allocated_unknownmessage(
      ::ProtoGuiCore::UnknownMessage* unknownmessage);
  ::ProtoGuiCore::UnknownMessage* unsafe_arena_release_unknownmessage();

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:ProtoGuiCore.ClientMessage)
 private:
  class _Internal;
  void set_has_requestdata();
  void set_has_unknownmessage();

  inline bool has_msg() const;
  inline void clear_has_msg();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::ProtoGuiCore::RequestData* requestdata_;
      ::ProtoGuiCore::UnknownMessage* unknownmessage_;
    } msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtobufFormatV1_2eporto;
};
// -------------------------------------------------------------------

class DataInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoGuiCore.DataInfo) */ {
 public:
  inline DataInfo() : DataInfo(nullptr) {}
  ~DataInfo() override;
  explicit PROTOBUF_CONSTEXPR DataInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DataInfo(const DataInfo& from);
  DataInfo(DataInfo&& from) noexcept
    : DataInfo() {
    *this = ::std::move(from);
  }

  inline DataInfo& operator=(const DataInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataInfo& operator=(DataInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DataInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const DataInfo* internal_default_instance() {
    return reinterpret_cast<const DataInfo*>(
               &_DataInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DataInfo& a, DataInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(DataInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DataInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DataInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DataInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DataInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const DataInfo& from) {
    DataInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoGuiCore.DataInfo";
  }
  protected:
  explicit DataInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .ProtoGuiCore.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::ProtoGuiCore::Item* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoGuiCore::Item >*
      mutable_items();
  private:
  const ::ProtoGuiCore::Item& _internal_items(int index) const;
  ::ProtoGuiCore::Item* _internal_add_items();
  public:
  const ::ProtoGuiCore::Item& items(int index) const;
  ::ProtoGuiCore::Item* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoGuiCore::Item >&
      items() const;

  // @@protoc_insertion_point(class_scope:ProtoGuiCore.DataInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoGuiCore::Item > items_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtobufFormatV1_2eporto;
};
// -------------------------------------------------------------------

class ServerMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoGuiCore.ServerMessage) */ {
 public:
  inline ServerMessage() : ServerMessage(nullptr) {}
  ~ServerMessage() override;
  explicit PROTOBUF_CONSTEXPR ServerMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ServerMessage(const ServerMessage& from);
  ServerMessage(ServerMessage&& from) noexcept
    : ServerMessage() {
    *this = ::std::move(from);
  }

  inline ServerMessage& operator=(const ServerMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerMessage& operator=(ServerMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerMessage& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kDataInfo = 2,
    kUnknownMessage = 3,
    MSG_NOT_SET = 0,
  };

  static inline const ServerMessage* internal_default_instance() {
    return reinterpret_cast<const ServerMessage*>(
               &_ServerMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ServerMessage& a, ServerMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ServerMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ServerMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ServerMessage& from) {
    ServerMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoGuiCore.ServerMessage";
  }
  protected:
  explicit ServerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataInfoFieldNumber = 2,
    kUnknownMessageFieldNumber = 3,
  };
  // .ProtoGuiCore.DataInfo dataInfo = 2;
  bool has_datainfo() const;
  private:
  bool _internal_has_datainfo() const;
  public:
  void clear_datainfo();
  const ::ProtoGuiCore::DataInfo& datainfo() const;
  PROTOBUF_NODISCARD ::ProtoGuiCore::DataInfo* release_datainfo();
  ::ProtoGuiCore::DataInfo* mutable_datainfo();
  void set_allocated_datainfo(::ProtoGuiCore::DataInfo* datainfo);
  private:
  const ::ProtoGuiCore::DataInfo& _internal_datainfo() const;
  ::ProtoGuiCore::DataInfo* _internal_mutable_datainfo();
  public:
  void unsafe_arena_set_allocated_datainfo(
      ::ProtoGuiCore::DataInfo* datainfo);
  ::ProtoGuiCore::DataInfo* unsafe_arena_release_datainfo();

  // .ProtoGuiCore.UnknownMessage unknownMessage = 3;
  bool has_unknownmessage() const;
  private:
  bool _internal_has_unknownmessage() const;
  public:
  void clear_unknownmessage();
  const ::ProtoGuiCore::UnknownMessage& unknownmessage() const;
  PROTOBUF_NODISCARD ::ProtoGuiCore::UnknownMessage* release_unknownmessage();
  ::ProtoGuiCore::UnknownMessage* mutable_unknownmessage();
  void set_allocated_unknownmessage(::ProtoGuiCore::UnknownMessage* unknownmessage);
  private:
  const ::ProtoGuiCore::UnknownMessage& _internal_unknownmessage() const;
  ::ProtoGuiCore::UnknownMessage* _internal_mutable_unknownmessage();
  public:
  void unsafe_arena_set_allocated_unknownmessage(
      ::ProtoGuiCore::UnknownMessage* unknownmessage);
  ::ProtoGuiCore::UnknownMessage* unsafe_arena_release_unknownmessage();

  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:ProtoGuiCore.ServerMessage)
 private:
  class _Internal;
  void set_has_datainfo();
  void set_has_unknownmessage();

  inline bool has_msg() const;
  inline void clear_has_msg();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::ProtoGuiCore::DataInfo* datainfo_;
      ::ProtoGuiCore::UnknownMessage* unknownmessage_;
    } msg_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ProtobufFormatV1_2eporto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UnknownMessage

// required string Answer = 1;
inline bool UnknownMessage::_internal_has_answer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UnknownMessage::has_answer() const {
  return _internal_has_answer();
}
inline void UnknownMessage::clear_answer() {
  _impl_.answer_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UnknownMessage::answer() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.UnknownMessage.Answer)
  return _internal_answer();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void UnknownMessage::set_answer(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.answer_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoGuiCore.UnknownMessage.Answer)
}
inline std::string* UnknownMessage::mutable_answer() {
  std::string* _s = _internal_mutable_answer();
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.UnknownMessage.Answer)
  return _s;
}
inline const std::string& UnknownMessage::_internal_answer() const {
  return _impl_.answer_.Get();
}
inline void UnknownMessage::_internal_set_answer(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.answer_.Set(value, GetArenaForAllocation());
}
inline std::string* UnknownMessage::_internal_mutable_answer() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.answer_.Mutable(GetArenaForAllocation());
}
inline std::string* UnknownMessage::release_answer() {
  // @@protoc_insertion_point(field_release:ProtoGuiCore.UnknownMessage.Answer)
  if (!_internal_has_answer()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.answer_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.answer_.IsDefault()) {
    _impl_.answer_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void UnknownMessage::set_allocated_answer(std::string* answer) {
  if (answer != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.answer_.SetAllocated(answer, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.answer_.IsDefault()) {
    _impl_.answer_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoGuiCore.UnknownMessage.Answer)
}

// -------------------------------------------------------------------

// Item

// required uint32 id = 1;
inline bool Item::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Item::has_id() const {
  return _internal_has_id();
}
inline void Item::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t Item::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t Item::id() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.Item.id)
  return _internal_id();
}
inline void Item::_internal_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.id_ = value;
}
inline void Item::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoGuiCore.Item.id)
}

// required string Name = 2;
inline bool Item::_internal_has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Item::has_name() const {
  return _internal_has_name();
}
inline void Item::clear_name() {
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Item::name() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.Item.Name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Item::set_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProtoGuiCore.Item.Name)
}
inline std::string* Item::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.Item.Name)
  return _s;
}
inline const std::string& Item::_internal_name() const {
  return _impl_.name_.Get();
}
inline void Item::_internal_set_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Item::_internal_mutable_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* Item::release_name() {
  // @@protoc_insertion_point(field_release:ProtoGuiCore.Item.Name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void Item::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ProtoGuiCore.Item.Name)
}

// -------------------------------------------------------------------

// RequestData

// -------------------------------------------------------------------

// ClientMessage

// .ProtoGuiCore.RequestData requestData = 2;
inline bool ClientMessage::_internal_has_requestdata() const {
  return msg_case() == kRequestData;
}
inline bool ClientMessage::has_requestdata() const {
  return _internal_has_requestdata();
}
inline void ClientMessage::set_has_requestdata() {
  _impl_._oneof_case_[0] = kRequestData;
}
inline void ClientMessage::clear_requestdata() {
  if (_internal_has_requestdata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.msg_.requestdata_;
    }
    clear_has_msg();
  }
}
inline ::ProtoGuiCore::RequestData* ClientMessage::release_requestdata() {
  // @@protoc_insertion_point(field_release:ProtoGuiCore.ClientMessage.requestData)
  if (_internal_has_requestdata()) {
    clear_has_msg();
    ::ProtoGuiCore::RequestData* temp = _impl_.msg_.requestdata_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.requestdata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ProtoGuiCore::RequestData& ClientMessage::_internal_requestdata() const {
  return _internal_has_requestdata()
      ? *_impl_.msg_.requestdata_
      : reinterpret_cast< ::ProtoGuiCore::RequestData&>(::ProtoGuiCore::_RequestData_default_instance_);
}
inline const ::ProtoGuiCore::RequestData& ClientMessage::requestdata() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.ClientMessage.requestData)
  return _internal_requestdata();
}
inline ::ProtoGuiCore::RequestData* ClientMessage::unsafe_arena_release_requestdata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoGuiCore.ClientMessage.requestData)
  if (_internal_has_requestdata()) {
    clear_has_msg();
    ::ProtoGuiCore::RequestData* temp = _impl_.msg_.requestdata_;
    _impl_.msg_.requestdata_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ClientMessage::unsafe_arena_set_allocated_requestdata(::ProtoGuiCore::RequestData* requestdata) {
  clear_msg();
  if (requestdata) {
    set_has_requestdata();
    _impl_.msg_.requestdata_ = requestdata;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoGuiCore.ClientMessage.requestData)
}
inline ::ProtoGuiCore::RequestData* ClientMessage::_internal_mutable_requestdata() {
  if (!_internal_has_requestdata()) {
    clear_msg();
    set_has_requestdata();
    _impl_.msg_.requestdata_ = CreateMaybeMessage< ::ProtoGuiCore::RequestData >(GetArenaForAllocation());
  }
  return _impl_.msg_.requestdata_;
}
inline ::ProtoGuiCore::RequestData* ClientMessage::mutable_requestdata() {
  ::ProtoGuiCore::RequestData* _msg = _internal_mutable_requestdata();
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.ClientMessage.requestData)
  return _msg;
}

// .ProtoGuiCore.UnknownMessage unknownMessage = 3;
inline bool ClientMessage::_internal_has_unknownmessage() const {
  return msg_case() == kUnknownMessage;
}
inline bool ClientMessage::has_unknownmessage() const {
  return _internal_has_unknownmessage();
}
inline void ClientMessage::set_has_unknownmessage() {
  _impl_._oneof_case_[0] = kUnknownMessage;
}
inline void ClientMessage::clear_unknownmessage() {
  if (_internal_has_unknownmessage()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.msg_.unknownmessage_;
    }
    clear_has_msg();
  }
}
inline ::ProtoGuiCore::UnknownMessage* ClientMessage::release_unknownmessage() {
  // @@protoc_insertion_point(field_release:ProtoGuiCore.ClientMessage.unknownMessage)
  if (_internal_has_unknownmessage()) {
    clear_has_msg();
    ::ProtoGuiCore::UnknownMessage* temp = _impl_.msg_.unknownmessage_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.unknownmessage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ProtoGuiCore::UnknownMessage& ClientMessage::_internal_unknownmessage() const {
  return _internal_has_unknownmessage()
      ? *_impl_.msg_.unknownmessage_
      : reinterpret_cast< ::ProtoGuiCore::UnknownMessage&>(::ProtoGuiCore::_UnknownMessage_default_instance_);
}
inline const ::ProtoGuiCore::UnknownMessage& ClientMessage::unknownmessage() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.ClientMessage.unknownMessage)
  return _internal_unknownmessage();
}
inline ::ProtoGuiCore::UnknownMessage* ClientMessage::unsafe_arena_release_unknownmessage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoGuiCore.ClientMessage.unknownMessage)
  if (_internal_has_unknownmessage()) {
    clear_has_msg();
    ::ProtoGuiCore::UnknownMessage* temp = _impl_.msg_.unknownmessage_;
    _impl_.msg_.unknownmessage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ClientMessage::unsafe_arena_set_allocated_unknownmessage(::ProtoGuiCore::UnknownMessage* unknownmessage) {
  clear_msg();
  if (unknownmessage) {
    set_has_unknownmessage();
    _impl_.msg_.unknownmessage_ = unknownmessage;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoGuiCore.ClientMessage.unknownMessage)
}
inline ::ProtoGuiCore::UnknownMessage* ClientMessage::_internal_mutable_unknownmessage() {
  if (!_internal_has_unknownmessage()) {
    clear_msg();
    set_has_unknownmessage();
    _impl_.msg_.unknownmessage_ = CreateMaybeMessage< ::ProtoGuiCore::UnknownMessage >(GetArenaForAllocation());
  }
  return _impl_.msg_.unknownmessage_;
}
inline ::ProtoGuiCore::UnknownMessage* ClientMessage::mutable_unknownmessage() {
  ::ProtoGuiCore::UnknownMessage* _msg = _internal_mutable_unknownmessage();
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.ClientMessage.unknownMessage)
  return _msg;
}

inline bool ClientMessage::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void ClientMessage::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline ClientMessage::MsgCase ClientMessage::msg_case() const {
  return ClientMessage::MsgCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// DataInfo

// repeated .ProtoGuiCore.Item items = 1;
inline int DataInfo::_internal_items_size() const {
  return _impl_.items_.size();
}
inline int DataInfo::items_size() const {
  return _internal_items_size();
}
inline void DataInfo::clear_items() {
  _impl_.items_.Clear();
}
inline ::ProtoGuiCore::Item* DataInfo::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.DataInfo.items)
  return _impl_.items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoGuiCore::Item >*
DataInfo::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoGuiCore.DataInfo.items)
  return &_impl_.items_;
}
inline const ::ProtoGuiCore::Item& DataInfo::_internal_items(int index) const {
  return _impl_.items_.Get(index);
}
inline const ::ProtoGuiCore::Item& DataInfo::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.DataInfo.items)
  return _internal_items(index);
}
inline ::ProtoGuiCore::Item* DataInfo::_internal_add_items() {
  return _impl_.items_.Add();
}
inline ::ProtoGuiCore::Item* DataInfo::add_items() {
  ::ProtoGuiCore::Item* _add = _internal_add_items();
  // @@protoc_insertion_point(field_add:ProtoGuiCore.DataInfo.items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoGuiCore::Item >&
DataInfo::items() const {
  // @@protoc_insertion_point(field_list:ProtoGuiCore.DataInfo.items)
  return _impl_.items_;
}

// -------------------------------------------------------------------

// ServerMessage

// .ProtoGuiCore.DataInfo dataInfo = 2;
inline bool ServerMessage::_internal_has_datainfo() const {
  return msg_case() == kDataInfo;
}
inline bool ServerMessage::has_datainfo() const {
  return _internal_has_datainfo();
}
inline void ServerMessage::set_has_datainfo() {
  _impl_._oneof_case_[0] = kDataInfo;
}
inline void ServerMessage::clear_datainfo() {
  if (_internal_has_datainfo()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.msg_.datainfo_;
    }
    clear_has_msg();
  }
}
inline ::ProtoGuiCore::DataInfo* ServerMessage::release_datainfo() {
  // @@protoc_insertion_point(field_release:ProtoGuiCore.ServerMessage.dataInfo)
  if (_internal_has_datainfo()) {
    clear_has_msg();
    ::ProtoGuiCore::DataInfo* temp = _impl_.msg_.datainfo_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.datainfo_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ProtoGuiCore::DataInfo& ServerMessage::_internal_datainfo() const {
  return _internal_has_datainfo()
      ? *_impl_.msg_.datainfo_
      : reinterpret_cast< ::ProtoGuiCore::DataInfo&>(::ProtoGuiCore::_DataInfo_default_instance_);
}
inline const ::ProtoGuiCore::DataInfo& ServerMessage::datainfo() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.ServerMessage.dataInfo)
  return _internal_datainfo();
}
inline ::ProtoGuiCore::DataInfo* ServerMessage::unsafe_arena_release_datainfo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoGuiCore.ServerMessage.dataInfo)
  if (_internal_has_datainfo()) {
    clear_has_msg();
    ::ProtoGuiCore::DataInfo* temp = _impl_.msg_.datainfo_;
    _impl_.msg_.datainfo_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerMessage::unsafe_arena_set_allocated_datainfo(::ProtoGuiCore::DataInfo* datainfo) {
  clear_msg();
  if (datainfo) {
    set_has_datainfo();
    _impl_.msg_.datainfo_ = datainfo;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoGuiCore.ServerMessage.dataInfo)
}
inline ::ProtoGuiCore::DataInfo* ServerMessage::_internal_mutable_datainfo() {
  if (!_internal_has_datainfo()) {
    clear_msg();
    set_has_datainfo();
    _impl_.msg_.datainfo_ = CreateMaybeMessage< ::ProtoGuiCore::DataInfo >(GetArenaForAllocation());
  }
  return _impl_.msg_.datainfo_;
}
inline ::ProtoGuiCore::DataInfo* ServerMessage::mutable_datainfo() {
  ::ProtoGuiCore::DataInfo* _msg = _internal_mutable_datainfo();
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.ServerMessage.dataInfo)
  return _msg;
}

// .ProtoGuiCore.UnknownMessage unknownMessage = 3;
inline bool ServerMessage::_internal_has_unknownmessage() const {
  return msg_case() == kUnknownMessage;
}
inline bool ServerMessage::has_unknownmessage() const {
  return _internal_has_unknownmessage();
}
inline void ServerMessage::set_has_unknownmessage() {
  _impl_._oneof_case_[0] = kUnknownMessage;
}
inline void ServerMessage::clear_unknownmessage() {
  if (_internal_has_unknownmessage()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.msg_.unknownmessage_;
    }
    clear_has_msg();
  }
}
inline ::ProtoGuiCore::UnknownMessage* ServerMessage::release_unknownmessage() {
  // @@protoc_insertion_point(field_release:ProtoGuiCore.ServerMessage.unknownMessage)
  if (_internal_has_unknownmessage()) {
    clear_has_msg();
    ::ProtoGuiCore::UnknownMessage* temp = _impl_.msg_.unknownmessage_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.unknownmessage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ProtoGuiCore::UnknownMessage& ServerMessage::_internal_unknownmessage() const {
  return _internal_has_unknownmessage()
      ? *_impl_.msg_.unknownmessage_
      : reinterpret_cast< ::ProtoGuiCore::UnknownMessage&>(::ProtoGuiCore::_UnknownMessage_default_instance_);
}
inline const ::ProtoGuiCore::UnknownMessage& ServerMessage::unknownmessage() const {
  // @@protoc_insertion_point(field_get:ProtoGuiCore.ServerMessage.unknownMessage)
  return _internal_unknownmessage();
}
inline ::ProtoGuiCore::UnknownMessage* ServerMessage::unsafe_arena_release_unknownmessage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoGuiCore.ServerMessage.unknownMessage)
  if (_internal_has_unknownmessage()) {
    clear_has_msg();
    ::ProtoGuiCore::UnknownMessage* temp = _impl_.msg_.unknownmessage_;
    _impl_.msg_.unknownmessage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ServerMessage::unsafe_arena_set_allocated_unknownmessage(::ProtoGuiCore::UnknownMessage* unknownmessage) {
  clear_msg();
  if (unknownmessage) {
    set_has_unknownmessage();
    _impl_.msg_.unknownmessage_ = unknownmessage;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoGuiCore.ServerMessage.unknownMessage)
}
inline ::ProtoGuiCore::UnknownMessage* ServerMessage::_internal_mutable_unknownmessage() {
  if (!_internal_has_unknownmessage()) {
    clear_msg();
    set_has_unknownmessage();
    _impl_.msg_.unknownmessage_ = CreateMaybeMessage< ::ProtoGuiCore::UnknownMessage >(GetArenaForAllocation());
  }
  return _impl_.msg_.unknownmessage_;
}
inline ::ProtoGuiCore::UnknownMessage* ServerMessage::mutable_unknownmessage() {
  ::ProtoGuiCore::UnknownMessage* _msg = _internal_mutable_unknownmessage();
  // @@protoc_insertion_point(field_mutable:ProtoGuiCore.ServerMessage.unknownMessage)
  return _msg;
}

inline bool ServerMessage::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void ServerMessage::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline ServerMessage::MsgCase ServerMessage::msg_case() const {
  return ServerMessage::MsgCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoGuiCore

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProtobufFormatV1_2eporto
